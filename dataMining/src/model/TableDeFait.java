package model;

// default package
// Generated 13 janv. 2012 16:20:29 by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * TableDeFait generated by hbm2java
 */
@Entity
@Table(name = "table_de_fait", schema = "public")
public class TableDeFait implements java.io.Serializable, ModelInterface {

	private int idEntry;
	private Composition composition;
	private EntryInformation entryInformation;
	private ProteinAttribute proteinAttribute;
	private SequenceAnnotation sequenceAnnotation;
	private GeneralAnnotation generalAnnotation;

	public TableDeFait() {
	}

	public TableDeFait(EntryInformation entryInformation) {
		this.entryInformation = entryInformation;
	}

	public TableDeFait(Composition composition,
			EntryInformation entryInformation,
			ProteinAttribute proteinAttribute,
			SequenceAnnotation sequenceAnnotation,
			GeneralAnnotation generalAnnotation) {
		this.composition = composition;
		this.entryInformation = entryInformation;
		this.proteinAttribute = proteinAttribute;
		this.sequenceAnnotation = sequenceAnnotation;
		this.generalAnnotation = generalAnnotation;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "entryInformation"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "id_entry", unique = true, nullable = false)
	public int getIdEntry() {
		return this.idEntry;
	}

	public void setIdEntry(int idEntry) {
		this.idEntry = idEntry;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_composition")
	public Composition getComposition() {
		return this.composition;
	}

	public void setComposition(Composition composition) {
		this.composition = composition;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public EntryInformation getEntryInformation() {
		return this.entryInformation;
	}

	public void setEntryInformation(EntryInformation entryInformation) {
		this.entryInformation = entryInformation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_attributes")
	public ProteinAttribute getProteinAttribute() {
		return this.proteinAttribute;
	}

	public void setProteinAttribute(ProteinAttribute proteinAttribute) {
		this.proteinAttribute = proteinAttribute;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_seq_annotation")
	public SequenceAnnotation getSequenceAnnotation() {
		return this.sequenceAnnotation;
	}

	public void setSequenceAnnotation(SequenceAnnotation sequenceAnnotation) {
		this.sequenceAnnotation = sequenceAnnotation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_general_annotation")
	public GeneralAnnotation getGeneralAnnotation() {
		return this.generalAnnotation;
	}

	public void setGeneralAnnotation(GeneralAnnotation generalAnnotation) {
		this.generalAnnotation = generalAnnotation;
	}

}
